@startuml AuthenticationController

package awp.kiko.rest {
    class AuthenticationController <<@RestController>> <<@RequestMapping("(/api/v1/auth")>> {
        + @PostMapping("/signup") signup(request: SignUpRequest): ResponseEntity<JwtAuthenticationResponse>
        + @PostMapping("/signin") signin(request: SigninRequest): ResponseEntity<JwtAuthenticationResponse>
        + @GetMapping("/confirm/{id}") confirmEmail(id: Integer): ResponseEntity<String>
    }
}

package awp.kiko.DTOs.request {
    class SignUpRequest {
        - email: String
        - password: String
        - role: Role
    }

    class SigninRequest {
        - email: String
        - password: String
    }
}

package awp.kiko.DTOs.response {
    class JwtAuthenticationResponse {
        - token: String
    }

    class IdJwtAuthenticationResponse {
        - id: Integer
        - token: String
    }
}

package awp.kiko.security {
    class AuthenticationService <<@Service>> {
        + signup(request: SignUpRequest): IdJwtAuthenticationResponse
        + signin(request: SigninRequest): JwtAuthenticationResponse
        + confirmEmail(id: Integer): String
    }
}

package awp.kiko.service {
    class EmailService <<@Service>> {
        + sendRegistrationEmail(email: String, userId: Integer): void
    }
}

AuthenticationController o-down-> "1" AuthenticationService: - authenticationService
AuthenticationController o-up-> "1" EmailService: - emailService
AuthenticationController ..> SignUpRequest
AuthenticationController ..> SigninRequest
AuthenticationController ..> JwtAuthenticationResponse
AuthenticationController ..> IdJwtAuthenticationResponse

@enduml